False = \f.\t.f
True = \f.\t.t
Zero = \z.\s.z
Succ = \n.\z.\s.s n
one = Succ Zero
two = Succ one
three = Succ two
const = \x.\y.x
fix = \ g. (\ x. g (x x)) (\ x. g (x x))
add = fix (\radd.\x.\y. x y (\ n. Succ (radd n y)))
mul = fix (\rmul.\x.\y. x Zero (\ n. add y (rmul n y)))
fac = fix (\rfac.\x. x one (\ n. mul x (rfac n)))
eqnat = fix (\reqnat.\x.\y. x (y True (const False)) (\x1.y False (\y1.reqnat x1 y1)))
sumto = fix (\rsumto.\x. x Zero (\n.add x (rsumto n)))
n3 = add one two
n5 = add two three
n4 = add two two
n24 = fac n4
n6 = sumto n3
isEqual = eqnat n24 (mul n6 n4)
isEqual
isEqual